name: Release Builds

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install universal dependencies (macOS only)
        if: matrix.os == 'macOS-latest'
        run: |
          # Force universal2 wheels for key packages
          pip install --upgrade pip
          pip uninstall -y pillow numpy
          pip install --no-binary :all: --compile pillow
          pip install numpy --no-binary numpy

      - name: Install dependencies
        run: |
          pip install pyinstaller
          pip install -r requirements.txt

      - name: Build executable
        shell: bash
        run: |
          if [[ "$RUNNER_OS" == "macOS" ]]; then
            # Build universal2 binary
            python -m PyInstaller \
              --onefile \
              --name=rifle_spread_analysis_universal \
              --target-arch universal2 \
              main.py
            
            mkdir -p release
            mv dist/rifle_spread_analysis_universal release/rifle_spread_analysis-macos-universal
            
            # Create separate arm64 and x86_64 copies
            cp release/rifle_spread_analysis-macos-universal release/rifle_spread_analysis-macos-arm64
            cp release/rifle_spread_analysis-macos-universal release/rifle_spread_analysis-macos-x86_64
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller --onefile --name=rifle_spread_analysis main.py
            mkdir -p release
            mv dist/rifle_spread_analysis.exe release/rifle_spread_analysis-windows-x86_64.exe
          else
            pyinstaller --onefile --name=rifle_spread_analysis main.py
            mkdir -p release
            mv dist/rifle_spread_analysis release/rifle_spread_analysis-linux-x86_64
          fi

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.os }}
          path: release/

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Combine artifacts
        run: |
          mkdir -p combined-release
          find artifacts -name "rifle_spread_analysis*" -exec cp {} combined-release/ \;

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: combined-release/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
