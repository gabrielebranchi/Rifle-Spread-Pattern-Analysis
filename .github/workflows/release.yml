name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Runs only when you push a version tag (e.g., v1.0)

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: pip install pyinstaller

      - name: Build Windows Executable
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --windowed --name "Spread_Pattern_Analysis-v${{ github.ref_name }}--win64-Release.exe" main.py

      - name: Build Linux AppImage
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --name "Spread_Pattern_Analysis-v${{ github.ref_name }}--x86_64-Release" main.py
          mv dist/Spread_Pattern_Analysis-v${{ github.ref_name }}--x86_64-Release dist/Spread_Pattern_Analysis-v${{ github.ref_name }}--x86_64-Release.AppImage

      - name: Build macOS Universal App
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --windowed --name "Spread_Pattern_Analysis-v${{ github.ref_name }}-macx-arm64-Release" main.py
          pyinstaller --onefile --windowed --name "Spread_Pattern_Analysis-v${{ github.ref_name }}-macx-x86_64-Release" main.py
          hdiutil create -format UDZO -srcfolder dist/Spread_Pattern_Analysis-v${{ github.ref_name }}-macx-arm64-Release.app "dist/Spread_Pattern_Analysis-v${{ github.ref_name }}-macx-arm64-Release.dmg"
          hdiutil create -format UDZO -srcfolder dist/Spread_Pattern_Analysis-v${{ github.ref_name }}-macx-x86_64-Release.app "dist/Spread_Pattern_Analysis-v${{ github.ref_name }}-macx-x86_64-Release.dmg"

      - name: Prepare Source Code
        run: |
          git archive --format=zip --output=dist/Source-Code.zip HEAD
          git archive --format=tar.gz --output=dist/Source-Code.tar.gz HEAD

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Executables
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: Executables
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
